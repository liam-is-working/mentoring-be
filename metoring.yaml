openapi: 3.0.3
info:
  title: Title
  description: Title
  version: 1.0.0
servers:
  - url: 'https'
paths:
  /sign-up/with-password:
    post:
      tags:
        - Sign up
      summary: Create a new account with email and password
      operationId: signUpWithPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUp'
      responses:
        200:
          description: verification mail has been sent
          content:
            application/json:
              schema:
                example: email@gmail
                type: string

        400:
          description: validation fail
          content:
            appication/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors'
        409:
          description: email has been used
  /sign-in/with-google:
    post:
      tags:
        - Sign in
      summary: Create or link an account to its google account and return user information and access token
      operationId: signInWithGoogle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInWithGoogleRequest'
      responses:
        200:
          description: successfully sign in with google
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInResponseBody'
        404:
          description: email does not authenticated with GG, hence it also doenst exist in firebase Auth
        403:
          description: email is not in FPT email group and has not been created as an Mentor or Staff
        400:
          description: validation fail
          content:
            appication/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors'
  /sign-in/with-password:
    post:
      tags:
        - Sign in
      summary: Sign in with email and password
      operationId: signInWithPassword
      requestBody:
        content:
          appication/json:
            schema:
              $ref: '#/components/schemas/SignIn'
      responses:
        200:
          description: Sign in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInResponseBody'
        404:
          description: Can't find account with email with password or email has not been verified
  /sign-in/send-reset-email:
    post:
      tags:
        - Sign in
      summary: Send reset password to email
      operationId: sendResetPasswrod
      requestBody:
        content:
          appication/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: abc@gmail.com
      responses:
        200:
          description: Reset email is sent
        409:
          description: Can't find email in database (might not verified yet)
  /sign-in/apply-password-change:
    post:
      tags:
        - Sign in
      summary: apply password change
      operationId: applyPasswordChange
      requestBody:
        content:
          appication/json:
            schema:
              type: object
              properties:
                oobCode:
                  type: string
                  example: asdascawc
                  description: get from the link in reset password email
                password:
                  type: string
                  example: passWord!1
                  description: new password
      responses:
        200:
          description: Apply successfully
        409:
          description: oob code is not valid,...
  /user-profile/current:
    post:
      tags:
        - User profile
      summary: Update current user profile
      operationId: updateCurrentUserProfile
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        200:
          description: update user profile successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        400:
          description: validation fail
          content:
            appication/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors'
        403:
          description: unathorized access
    get:
      tags:
        - User profile
      summary: get current user profile
      operationId: getCurrentUserProfile
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
      responses:
        200:
          description: fetch current profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        403:
          description: unathorized access, current access-token is not valid
  /user-profile/cv/current:
    post:
      tags:
        - User profile
      summary: Update current user CV information
      operationId: updateCurrentUserProfileCv
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserProfileCv'
      responses:
        200:
          description: update user profile successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileCv'
        400:
          description: validation fail
          content:
            appication/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors'
        403:
          description: unathorized access
    get:
      tags:
        - User profile
      summary: get current user profile cv
      operationId: getCurrentUserProfileCv
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
      responses:
        200:
          description: fetch current profile Cv
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileCv'
        403:
          description: unathorized access, current access-token is not valid
  /accounts/staffs:
    post:
      tags:
        - Accounts
      summary: Create a staff account with email
      operationId: create staff account
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStaffAccountRequest'
      responses:
        200:
          description: create a staff successfully
        409:
          description: email is an FPT student email or email already exists
        400:
          description: validation fail
          content:
            appication/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors'
        403:
          description: unathorized access
    get:
      tags:
        - Accounts
      summary: get all staff accounts
      operationId: getStaffAccounts
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: false
      responses:
        200:
          description: get all staff accounts
        403:
          description: unathorized access, current access-token is not valid
  /accounts/mentors:
    post:
      tags:
        - Accounts
      summary: Create a mentor account with email
      operationId: create mentor account
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMentorAccountRequest'
      responses:
        200:
          description: create a mentor account successfully
        409:
          description: email is an FPT student email or email already exists
        400:
          description: validation fail
          content:
            appication/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors'
        403:
          description: unathorized access
    get:
      tags:
        - Accounts
      summary: get all mentors accounts
      operationId: getMentorAccounts
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: false
      responses:
        200:
          description: get all mentor accounts
        403:
          description: unathorized access, current access-token is not valid


components:
  schemas:
    ValidationErrors:
      type: array
      items:
        properties:
          field:
            type: string
          errorDetail:
            type: string
    SignUp:
      type: object
      properties:
        email:
          type: string
          pattern: ^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$
          example: email@
        fullName:
          type: string
        password:
          type: string
      required: [email, fullName, password]
    SignIn:
      type: object
      properties:
        email:
          type: string
          pattern: ^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$
          example: email@gmail.com
        password:
          type: string
      required: [email, password]
    SignInResponseBody:
      type: object
      properties:
        email:
          type: string
          example: email@gmail.com
        accessToken:
          type: string
          example: IA1239akYAYJHKJ
        role:
          type: string
          enum:
            [ MENTOR, MENTEE, STAFF ]
        isLocked:
          type: boolean
        fullName:
          type: string
        dob:
          type: string
          format: dd-MM-yyyy
          example: 27/04/2001
        gender:
          type: string
          enum:
            ["male", "female", "others"]
        avatarUrl:
          type: string
    SignInWithGoogleRequest:
          type: object
          properties:
            idToken:
              type: string
              description: firebase generated token for the user
            email:
              type: string
              example: abc@gmail.com
            localId:
              type: string
              description: firebase user id
            fullName:
              type: string
              description: full name fetched from Google account
            avatarUrl:
              type: string
              description: avatar url fetched from Google account
          required: [idToken,email,localId]
    CreateStaffAccountRequest:
      type: object
      properties:
        email:
          type: string
          example: abc@gmail.com
        fullName:
          type: string
          description: full name fetched from Google account
        avatarUrl:
          type: string
          description: avatar url fetched from Google account
      required: [ email ]
    CreateMentorAccountRequest:
      type: object
      properties:
        email:
          type: string
          example: abc@gmail.com
        fullName:
          type: string
          description: full name fetched from Google account
        avatarUrl:
          type: string
          description: avatar url fetched from Google account
      required: [ email ]
    UserProfile:
      properties:
        email:
          type: string
          example: email@gmail.com
        fullName:
          type: string
        dob:
          type: string
          format: yyyy-MM-dd
          example: 2001-04-27
        gender:
          type: string
          enum:
            ["male", "female", "others"]
        avatarUrl:
          type: string
        coverUrl:
          type: string
    UserProfileCv:
      example:
        {
          "userProfileId": "123",
          "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat",
          "workingExps": [
            {
              "index": "0",
              "position": "string",
              "company": "string",
              "startDate": "2020-02-13",
              "endDate": "2020-02-13",
              "description": "string",
              "workingHere": false
            },
            {
              "index": "1",
              "position": "string",
              "company": "string",
              "startDate": "2020-02-13",
              "endDate": "2020-02-13",
              "description": "string",
              "workingHere": false
            }
          ],
          "learningExps": [
            {
              "index": "0",
              "school": "string",
              "major": "string",
              "startDate": "2020-02-13",
              "endDate": "2020-02-13",
              "description": "string"
            }
          ],
          "socialActivities": [
            {
              "index": "0",
              "organization": "string",
              "position": "string",
              "startDate": "2020-02-13",
              "endDate": "2020-02-13",
              "description": "string",
              "attendingThis": false
            }
          ],
          "achievements": [
            {
              "index": "0",
              "name": "string",
              "organization": "string",
              "achievingDate": "2020-02-13",
              "description": "string"
            }
          ],
          "certificates": [
            {
              "index": "0",
              "name": "string",
              "organization": "string",
              "achievingDate": "2020-02-13",
              "expiryDate": "2020-02-13",
              "description": "string"
            }
          ],
          "skills": [
            {
              "index": "0",
              "name": "string",
              "description": "string"
            }
          ]
        }
      properties:
        userProfileId:
          type: string
        description:
          type: string
          example: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat
        workinExps:
          type: array
          properties:
            index:
              type: string
            position:
              type: string
            company:
              type: string
            isWorkingHere:
              type: boolean
            startDate:
              type: string
              format: yyyy-MM-dd
            endDate:
              type: string
              format: yyyy-MM-dd
            description:
              type: string
        learningExps:
          type: array
          properties:
            index:
              type: string
            school:
              type: string
            major:
              type: string
            startDate:
              type: string
              format: yyyy-MM-dd
            endDate:
              type: string
              format: yyyy-MM-dd
            description:
              type: string
        socialActivities:
          type: array
          properties:
            index:
              type: string
            organization:
              type: string
            position:
              type: string
            isAttendingThis:
              type: string
            startDate:
              type: string
              format: yyyy-MM-dd
            endDate:
              type: string
              format: yyyy-MM-dd
            description:
              type: string
        achievements:
          type: array
          properties:
            index:
              type: string
            name:
              type: string
            organization:
              type: string
            achievingDate:
              type: string
              format: yyyy-MM-dd
            description:
              type: string
        certificates:
          type: array
          properties:
            index:
              type: string
            name:
              type: string
            organization:
              type: string
            achievingDate:
              type: string
              format: yyyy-MM-dd
            expiryDate:
              type: string
              format: yyyy-MM-dd
            description:
              type: string
        skills:
          type: array
          properties:
            index:
              type: string
            name:
              type: string
            description:
              type: string
    UpdateUserProfileCv:
      example:
        {
          "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat",
          "workingExps": [
            {
              "position": "string",
              "company": "string",
              "startDate": "2020-02-13",
              "endDate": "2020-02-13",
              "description": "string",
              "workingHere": false
            },
            {
              "position": "string",
              "company": "string",
              "startDate": "2020-02-13",
              "endDate": "2020-02-13",
              "description": "string",
              "workingHere": false
            }
          ],
          "learningExps": [
            {
              "school": "string",
              "major": "string",
              "startDate": "2020-02-13",
              "endDate": "2020-02-13",
              "description": "string"
            }
          ],
          "socialActivities": [
            {
              "organization": "string",
              "position": "string",
              "startDate": "2020-02-13",
              "endDate": "2020-02-13",
              "description": "string",
              "attendingThis": false
            }
          ],
          "achievements": [
            {
              "name": "string",
              "organization": "string",
              "achievingDate": "2020-02-13",
              "description": "string"
            }
          ],
          "certificates": [
            {
              "name": "string",
              "organization": "string",
              "achievingDate": "2020-02-13",
              "expiryDate": "2020-02-13",
              "description": "string"
            }
          ],
          "skills": [
            {
              "name": "string",
              "description": "string"
            }
          ]
        }
      properties:
        description:
          type: string
          example: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat
        workinExps:
          type: array
          properties:
            position:
              type: string
            company:
              type: string
            isWorkingHere:
              type: boolean
            startDate:
              type: string
              format: yyyy-MM-dd
            endDate:
              type: string
              format: yyyy-MM-dd
            description:
              type: string
        learningExps:
          type: array
          properties:
            school:
              type: string
            major:
              type: string
            startDate:
              type: string
              format: yyyy-MM-dd
            endDate:
              type: string
              format: yyyy-MM-dd
            description:
              type: string
        socialActivities:
          type: array
          properties:
            organization:
              type: string
            position:
              type: string
            isAttendingThis:
              type: string
            startDate:
              type: string
              format: yyyy-MM-dd
            endDate:
              type: string
              format: yyyy-MM-dd
            description:
              type: string
        achievements:
          type: array
          properties:
            name:
              type: string
            organization:
              type: string
            achievingDate:
              type: string
              format: yyyy-MM-dd
            description:
              type: string
        certificates:
          type: array
          properties:
            name:
              type: string
            organization:
              type: string
            achievingDate:
              type: string
              format: yyyy-MM-dd
            expiryDate:
              type: string
              format: yyyy-MM-dd
            description:
              type: string
        skills:
          type: array
          properties:
            name:
              type: string
            description:
              type: string

